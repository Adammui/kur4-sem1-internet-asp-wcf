//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinForm.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ADA/", ConfigurationName="ServiceReference1.SimplexSoap")]
    public interface SimplexSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ADA/Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Add(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ADA/Add", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ADA/Concat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Concat(string s, double d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ADA/Concat", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ConcatAsync(string s, double d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ADA/Sum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WinForm.ServiceReference1.A Sum(WinForm.ServiceReference1.A a1, WinForm.ServiceReference1.A a2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ADA/Sum", ReplyAction="*")]
        System.Threading.Tasks.Task<WinForm.ServiceReference1.A> SumAsync(WinForm.ServiceReference1.A a1, WinForm.ServiceReference1.A a2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ADA/Adds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Adds(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ADA/Adds", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddsAsync(int x, int y);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ADA/")]
    public partial class A : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sField;
        
        private int kField;
        
        private float fField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string s {
            get {
                return this.sField;
            }
            set {
                this.sField = value;
                this.RaisePropertyChanged("s");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int k {
            get {
                return this.kField;
            }
            set {
                this.kField = value;
                this.RaisePropertyChanged("k");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float f {
            get {
                return this.fField;
            }
            set {
                this.fField = value;
                this.RaisePropertyChanged("f");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SimplexSoapChannel : WinForm.ServiceReference1.SimplexSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimplexSoapClient : System.ServiceModel.ClientBase<WinForm.ServiceReference1.SimplexSoap>, WinForm.ServiceReference1.SimplexSoap {
        
        public SimplexSoapClient() {
        }
        
        public SimplexSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimplexSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimplexSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimplexSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(int x, int y) {
            return base.Channel.Add(x, y);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int x, int y) {
            return base.Channel.AddAsync(x, y);
        }
        
        public string Concat(string s, double d) {
            return base.Channel.Concat(s, d);
        }
        
        public System.Threading.Tasks.Task<string> ConcatAsync(string s, double d) {
            return base.Channel.ConcatAsync(s, d);
        }
        
        public WinForm.ServiceReference1.A Sum(WinForm.ServiceReference1.A a1, WinForm.ServiceReference1.A a2) {
            return base.Channel.Sum(a1, a2);
        }
        
        public System.Threading.Tasks.Task<WinForm.ServiceReference1.A> SumAsync(WinForm.ServiceReference1.A a1, WinForm.ServiceReference1.A a2) {
            return base.Channel.SumAsync(a1, a2);
        }
        
        public int Adds(int x, int y) {
            return base.Channel.Adds(x, y);
        }
        
        public System.Threading.Tasks.Task<int> AddsAsync(int x, int y) {
            return base.Channel.AddsAsync(x, y);
        }
    }
}
