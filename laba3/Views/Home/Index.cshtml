
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <script src="~/Scripts/jquery-3.6.1.min.js"></script>
    <script>
        function DeleteStudent() {
            fetch('http://localhost:120/api/students/' + document.getElementById('id').value, { method: 'DELETE' })
                .then(result => GetStudents());
           
        }
        function EditStudent() {
            fetch('http://localhost:120/api/students/', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    id: document.getElementById('id').value,
                    name: document.getElementById('name').value,
                    phone: document.getElementById('phone').value
                })
            }).then(result => GetStudents());
        }
        function AddStudent() {
            fetch('http://localhost:120/api/students/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    name: document.getElementById('name').value,
                    phone: document.getElementById('phone').value
                })
            }).then(result => GetStudents());
        }

        function GetStudentById() {
            var type = $("input[type='radio'][name='type']:checked").val();
            fetch('http://localhost:120/api/students.' + type + '/' + document.getElementById('id').value, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/' + type,
                    'Accept': 'application/' + type,
                },
            }).then(response => {
                if (!response.ok) {
                    return response.text().then(text => { throw new Error(text) })
                }
                else {
                    if (type == "xml") { return response.text() } else { return response.json(); }
                }
            })
                .then(data => {
                    if (type == "xml") { xmltable(data); } else { constructTable(data); }

                })
                .catch(err => {
                    alert(err);
                });

        };

        function GetStudents() {
            var type = $("input[type='radio'][name='type']:checked").val();

            var url = 'http://localhost:120/api/students.' + type + '/' + document.getElementById('id').value;
            fetch(FormUrl(url), {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/' + type,
                    'Accept': 'application/' + type,
                },
            }).then(response => {
                if (!response.ok) {
                    return response.text().then(text => { throw new Error(text) })
                }
                else {
                    if (type == "xml") { return response.text() } else { return response.json(); }
                }
            })
                .then(data => {
                    if (type == "xml") { xmltable(data); } else { constructTable(data); }

                })
                .catch(err => {
                    alert(err + " See Hateoas link for more info ");
                   
                });
        }

        function FormUrl(url) {
            var params = []

            var limit = document.getElementById('limit').value;
            if (limit.length !== 0) { params.push('limit=' + limit) }

            var offset = document.getElementById('offset').value;
            if (offset.length !== 0) { params.push('offset=' + offset) }

            var sort = document.getElementById("sort").checked;
            if (sort === true) { params.push('sort') }

            var maxid = document.getElementById('maxid').value;
            if (maxid.length !== 0) { params.push('maxid=' + maxid) }

            var minid = document.getElementById('minid').value;
            if (minid.length !== 0) { params.push('minid=' + minid) }

            var like = document.getElementById('like').value;
            if (like.length !== 0) { params.push('like=' + like) }

            var columns = document.getElementById('columns').value;
            if (columns.length !== 0) { params.push('columns=' + columns) }

            var globalike = document.getElementById('globalike').value;
            if (globalike.length !== 0) { params.push('globalike=' + globalike) }

            if (params.length !== 0) { url = url + '?' + params.join('&') }
            return url;
        }
        function HateOasDelete(url) {
            fetch(url.replace('.json', ''), { method: 'DELETE' }).then(result => GetStudents());
        }

        function HateOasId(url, Method) {
            //console.log(hateoas.Href);
            fetch(url, {
                method: Method,
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then(res => {
                    if (!res.ok) {
                        return res.text().then(text => { throw new Error(text) })
                    }
                    else {
                        return res.json();
                    }
                })
                .then((data) => constructTable(data))
                .catch(err => {
                    alert(err);
                });
        };

        function HateOasPut(url, Method, ids) {
            fetch('http://localhost:120/api/students/', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    id: ids,
                    name: document.getElementById('name').value,
                    phone: document.getElementById('phone').value
                })
            }).then(result => GetStudents());
        };


        function constructTable(list) {

            var selector = document.getElementById('result');
            clean(selector);

            var dvTable = $("#dvTable");
            dvTable.html("");
            // Getting the all column names
            var cols = Headers(list, selector);

            // Traversing the JSON data
            for (var i = 0; i < list.length; i++) {
                var row = $('<tr/>');
                for (var colIndex = 0; colIndex < cols.length; colIndex++) {
                    var val = list[i][cols[colIndex]];
                    //if(typeof val == "object"){console.log(JSON.stringify(val))}

                    // If there is any key, which is matching
                    // with the column name
                    if (val == null || val == 0) val = "";
                    if (typeof val == "object") {
                        row.append($('<td/>').html(`<button onclick='HateOasId("${val.HateOasGet.Href}", "get")'>get by id</button> <button onclick='HateOasPut("${val.HateOasPut.Href}", "put","${val.HateOasPut.Href.charAt(val.HateOasPut.Href.length - 1)}")'> put (edit) </button> <button onclick='HateOasDelete("${val.HateOasDelete.Href}")'>delete</button>`));
                        //row.append($('<td/>').html(`<button onclick='HateOasDelete("${val.Href}")'>delete</button>`))
                    } else {
                        row.append($('<td/>').html(val));
                    }
                }

                // Adding each row to the table
                $(selector).append(row);
            }
        }
        function Headers(list, selector) {
            var columns = [];
            var header = $('<tr/>');

            for (var i = 0; i < list.length; i++) {
                var row = list[i];

                for (var k in row) {
                    if ($.inArray(k, columns) == -1) {
                        columns.push(k);

                        // Creating the header
                        // if (k == "HateOas") { continue; }
                        header.append($('<th/>').html(k));
                    }
                }
            }

            // Appending the header to the table
            $(selector).append(header);
            return columns;
        }
        function clean(table) {
            table.innerHTML = '';
        }

        function constructTableXml(xmlDoc) {
            var selector = document.getElementById('result');
            clean(selector);

            var customers = $(xmlDoc).find("StudentApi");

            //Create a HTML Table element.
            var table = $("<table />");
            table[0].border = "1";

            //Add the header row.
            var row = $(table[0].insertRow(-1));
            customers.eq(0).children().each(function () {

                var headerCell = $("<th />");
                headerCell.html(this.nodeName);
                row.append(headerCell);
            });

            //Add the data rows.
            $(customers).each(function () {
                row = $(table[0].insertRow(-1));
                $(this).children().each(function () {
                    var cell = $("<td />");
                    cell.html($(this).text());
                    row.append(cell);
                });
            });

            var dvTable = $("#dvTable");
            dvTable.html("");
            dvTable.append(table);
        }

        function xmltable(data) {

            var selector = document.getElementById('result');
            clean(selector);
            var content = "";
            var table = "";
            var $xml = $(data);
            var $user = $xml.find("StudentApi");

            table = "<table border='1'>" +
                "<thead>" +
                "<tr>" +
                "<th>Id</th>" +
                "<th>Name</th>" +
                "<th>Phone</th>" +
                "<th>HateOas</th>" +
                "</tr>" +
                "</thead>" +
                "<tbody id='age'></tbody>" +
                "</table>";

            $("#dvTable").html(table);
            // "<th>Href</th>" +

            $user.each(function () {

                var Id = $(this).find('Id').text();
                var Name = $(this).find('Name').text();
                var Phone = $(this).find('Phone').text();
                var Href = $(this).find('HateOas').find('Href').text();

                if (Id == 0) { Id = ""; }

                content += "<tr>"
                    + "<td>" + Id + "</td>"
                    + "<td>" + Name + "</td>"
                    + "<td>" + Phone + "</td>"
                    + `<td><button onclick='HateOasId("${Href}", "get")'>get by id</button>`
                    + `<td><button onclick='HateOasPut("${Href}", "put","${id}")'>put(edit)</button>`
                    + `<button onclick='HateOasDelete("${Href}")'>delete</button></td>`;

                + "</tr>";
                // + "<td>" + Href + "</td>"
                $("#age").html(content);

            });
        }
    </script>
    <style type='text/css'>
        label {
            display: block;
            font-weight: bold;
            margin: 6px 0;
        }
    </style>
</head>
<body>
    <br><br>
        <div>
            <table width="100%" cellspacing="0" cellpadding="5">
                <tr>
                    <td height="74px" width="200" valign="top">
                        <label>Id:</label>
                        <label>Name:</label>
                        <label>Phone:</label>
                    </td>
                    <td valign="top">
                        <input type="text" id="id" align="middle" />
                        <br />
                        <input type="text" id="name" align="middle" />
                        <br />
                        <input type="text" id="phone" align="middle" />
                        <br />
                    </td>
                </tr>
            </table>
            <br />
            <input type="button" onclick="AddStudent()" value="Add Student" />
            <input type="button" onclick="GetStudents()" value="Get Students" />
            <br />

            <input id="xml" type="radio" value="xml" name="type" /> xml
            <input id="json" type="radio" value="json" name="type" checked=true /> json

            <input type="checkbox" value="sort" name="sort" id="sort" /> sort
            <br>
            <table width="100%" cellspacing="0" cellpadding="5">
                <tr>
                    <td height="220px" width="200" valign="top">
                        <label>Limit: </label>
                        <label>Offset:</label>
                        <label>MinId:</label>
                        <label>MaxId:</label>
                        <label>Like(name):</label>
                        <label>Globalike:</label>
                        <label>Columns:</label>
                    </td>
                    <td valign="top">
                        <input type="number" id="limit" align="middle" />
                        <br>
                        <input type="number" name="offset" id="offset" align="middle" />
                        <br>
                        <input type="number" name="minid" id="minid" align="middle" />
                        <br>
                        <input type="number" name="maxid" id="maxid" align="middle" />
                        <br>
                        <input type="text" name="like" id="like" align="middle" />
                        <br>
                        <input type="text" name="globalike" id="globalike" align="middle" />
                        <br>
                        <input type="text" name="columns" id="columns" align="middle" />
                        <br>
                    </td>
                </tr>
            </table>
            <br>
            <table id="result" border="1"></table>
            <br />
            <div id="dvTable">
            </div>
        </div>
</body>
</html>